customRules:
  mitre_rules.yaml: |-
    - rule: Base64-encoded Python Script Execution
      desc: >
        This rule detects base64-encoded Python scripts on command line arguments.
        Base64 can be used to encode binary data for transfer to ASCII-only command
        lines. Attackers can leverage this technique in various exploits to load
        shellcode and evade detection.
      condition: >
        spawned_process and (
          ((proc.cmdline contains "python -c" or proc.cmdline contains "python3 -c" or proc.cmdline contains "python2 -c") and
          (proc.cmdline contains "echo" or proc.cmdline icontains "base64"))
          or
          ((proc.cmdline contains "import" and proc.cmdline contains "base64" and proc.cmdline contains "decode"))
        )
      output: >
        Potentially malicious Python script encoded on command line
        (proc.cmdline=%proc.cmdline user.name=%user.name proc.name=%proc.name
        proc.pname=%proc.pname evt.type=%evt.type gparent=%proc.aname[2]
        ggparent=%proc.aname[3] gggparent=%proc.aname[4] evt.res=%evt.res
        proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid
        proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath
        user.uid=%user.uid user.loginuid=%user.loginuid
        user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name
        image=%container.image.repository:%container.image.tag
        container.id=%container.id container.name=%container.name file=%fd.name)
      priority: warning
      tags:
        - T1037.004
        - TA0005
        - mitre_defense_evasion
        - MITRE_obfuscated_files_and_information
        - T1027
      source: syscall
      append: false
      exceptions:
        - name: proc_cmdlines
          comps:
            - startswith
          fields:
            - proc.cmdline

    - rule: Detect outbound connections to common miner pool ports
      enabled: true

    - rule: Detect XMRig execution
      desc: Detects the execution of the XMRig binary in the command line
      condition: >
        spawned_process and
        proc.cmdline contains "xmrig"
      output: >
        XMRig binary executed on command line
        (proc.cmdline=%proc.cmdline user.name=%user.name proc.name=%proc.name
        proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid
        proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath
        user.uid=%user.uid user.loginuid=%user.loginuid
        user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name
        image=%container.image.repository:%container.image.tag
        container.id=%container.id container.name=%container.name file=%fd.name)
      priority: warning
      tags:
        - cryptomining
        - mitre_execution
        - T1204.002
      source: syscall

    - rule: Detect Nanominer Execution
      desc: Detects the execution of the Nanominer binary in the command line
      condition: >
        spawned_process and
        proc.cmdline contains "nanominer"
      output: >
        Nanominer binary executed on command line
        (proc.cmdline=%proc.cmdline user.name=%user.name proc.name=%proc.name
        proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid
        proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath
        user.uid=%user.uid user.loginuid=%user.loginuid
        user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name
        image=%container.image.repository:%container.image.tag
        container.id=%container.id container.name=%container.name file=%fd.name)
      priority: warning
      tags:
        - cryptomining
        - mitre_execution
        - T1204.002
      source: syscall

    - rule: Exfiltrating Artifacts via Kubernetes Control Plane
      desc: >
        Detect the copying of artifacts from a container's file system using the Kubernetes control plane (kubectl cp). 
        This rule can identify potential exfiltration of application secrets from containers' file systems, potentially 
        revealing the outcomes of unauthorized access and control plane misuse via stolen identities (such as stolen 
        credentials like Kubernetes serviceaccount tokens). Can be customized by the adopter to only monitor specific 
        artifact paths, containers, or namespaces as needed.
      condition: >
        open_read 
        and container 
        and proc.name=tar 
        and container_entrypoint 
        and proc.tty=0 
        and not system_level_side_effect_artifacts_kubectl_cp
      output: Exfiltrating Artifacts via Kubernetes Control Plane (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: NOTICE
      tags: [mitre_exfiltration, TA0010]

    - macro: system_level_side_effect_artifacts_kubectl_cp
      condition: (fd.name startswith /etc or 
                  fd.name startswith /proc or 
                  fd.name startswith /lib or 
                  fd.name startswith /run or 
                  fd.name startswith /usr or 
                  fd.name="/")
